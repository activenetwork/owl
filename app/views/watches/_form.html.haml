= f.error_messages

%fieldset
  = f.label :site_id, 'Group'
  = f.select :site_id, Site.all.map { |s| [s.name,s.id] }, :prompt => 'Choose Group...'

  = f.label :name
  = f.text_field :name

  = f.label :url
  = f.text_field :url

%fieldset
  = f.label :warning_time
  = f.text_field :warning_time
  %span.example Number of milliseconds before the site is in the "warning" state (blinking)

  = f.label :content_match
  = f.text_field :content_match
  %span.example A regular expression that is compared against the HTML returned from the site

  = f.label :response_code_id, 'Expected Response'
  = f.select :response_code_id, ResponseCode.all.map { |c| ["#{c.code} - #{c.name}",c.id] }
  %span.example If the site does not return this response code, consider it down

- if params[:action] == 'edit'
  %fieldset.alerts
    %h3 Alerts
    - unless watch.alerts.empty?
      - watch.alerts.each_with_index do |alert,i|
        = render :partial => 'alerts/alert', :locals => { :alert => alert, :i => i }
    - else
      No alerts.
      
    .button.add
      = link_to 'Add Alert', new_alert_path(:watch => watch.id), :class => 'add_alert'

    - watches_with_alerts = Watch.all.reject { |w| w.alerts.empty? || w == watch }
    - unless watches_with_alerts.empty?
      .copy
        %h4 Copy Alerts From
        %ul
          - watches_with_alerts.each do |w| 
            %li= link_to("#{w.site.name}: #{w.name}", { :controller => 'watches', :action => 'copy', :from => w.id, :to => watch.id }, :confirm => 'This will clear any existing alerts on this watch. Are you sure?', :method => :post)
